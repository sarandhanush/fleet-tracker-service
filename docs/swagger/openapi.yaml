openapi: 3.0.0
info:
  title: Fleet Tracker Testing
  version: "1.0.0"
  description: Minimal Fleet Tracker API
servers:
  - url: http://localhost:8080
paths:
  /login:
    post:
      summary: Login to get JWT (admin/admin@2025)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: token
  /api/vehicle/ingest:
    post:
      summary: Ingest vehicle status (protected)
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingest'
            example:
              vehicle_id: "d9c1b442-fb2f-412a-9d2a-a3ab499cd91c"
              plate_number: "DXB-12345"
              status:
                location: [55.296249, 25.276987]
                speed: 60.5
                timestamp: "2025-06-17T09:12:00Z"
      responses:
        "200":
          description: successful ingestion
          content:
            application/json:
              example:
                ok: true
        "400":
          description: invalid input
          content:
            application/json:
              example:
                error: "pq: invalid input syntax for type uuid: \"1\""
  /api/vehicle/status:
    get:
      summary: Get vehicle status (cached)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: vehicle_id
          schema:
            type: string
      responses:
        "200":
          description: vehicle status
          content:
            application/json:
              example:
                location: [55.296645000000005, 25.277493]
                speed: 69.22
                timestamp: "2025-08-31T07:50:30Z"
        "400":
          description: invalid input
          content:
            application/json:
              example:
                error: "pq: invalid input syntax for type uuid: \"d9c1b442-fb2f-412a-9d2a-\""
        "404":
          description: vehicle not found
          content:
            application/json:
              example:
                error: "Vehicle not found"
  /api/vehicle/trips:
    get:
      summary: Get trips for past 24 hours
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: vehicle_id
          schema:
            type: string
      responses:
        "200":
          description: trips
          content:
            application/json:
              example:
                - id: "233aea98-29bc-4830-918d-75e544283a01"
                  vehicle_id: "d9c1b442-fb2f-412a-9d2a-a3ab499cd91c"
                  start_time: "2025-08-31T07:49:00Z"
                  end_time: "2025-08-31T07:50:00Z"
                  mileage: 0.5
                  avg_speed: 30
                - id: "709ed6f6-38d3-4502-b009-bbc98e44c722"
                  vehicle_id: "d9c1b442-fb2f-412a-9d2a-a3ab499cd91c"
                  start_time: "2025-08-31T07:48:58Z"
                  end_time: "2025-08-31T07:49:58Z"
                  mileage: 0.5
                  avg_speed: 30
        "404":
          description: trips not found
          content:
            application/json:
              example:
                error: "trips not found"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Ingest:
      type: object
      properties:
        vehicle_id:
          type: string
        plate_number:
          type: string
        status:
          type: object
          properties:
            location:
              type: array
              items:
                type: number
            speed:
              type: number
            timestamp:
              type: string
      required:
        - vehicle_id
        - status
    Trip:
      type: object
      properties:
        id:
          type: string
        vehicle_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        mileage:
          type: number
        avg_speed:
          type: number